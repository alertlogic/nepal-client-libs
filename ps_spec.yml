version: 1.0
service_name: nepal-client-libs

stages:
    -
        name: PR Test
        when:
            - pull_request
            - pull_request:
                trigger_phrase: test it
        image: node:13
        compute_size: large
        commands:
            - npm install
            - node_modules/lerna/cli.js info
            - echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list
            - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
            - apt-get update && apt-get -y install google-chrome-stable jq
            - export CHROME_BIN='/usr/bin/google-chrome'
            - npm run lint
            - npm run test
            - npx madge --circular --extensions ts --ts-config tsconfig.json packages
            - |
                ls

                #code coverage section
                COVERAGE_DIRECTORY=./coverage/*
                echo "### Unit Test Coverage Report\n\n" > comments.txt
                echo "| Lib | Branches | Functions | Lines | Statements |" >> comments.txt
                echo "|:---|---|---|---|---|" >> comments.txt

                for folder in $COVERAGE_DIRECTORY; do   
                    project="$(basename $folder)"
                    if [ -d "$folder" ]; then
                        COVERGAE_JSON_SUMMARY_FILE=$folder/summary/json-summary.json 
                        if [ -f $COVERGAE_JSON_SUMMARY_FILE ]; then
                            echo -n "| *$project* |" >> comments.txt
                            for k in $(jq  -r '.total | keys | .[]' $COVERGAE_JSON_SUMMARY_FILE); do
                                if [ "$k" != "linesCovered" ]; then
                                    total=$(jq -r ".total.$k.total" $COVERGAE_JSON_SUMMARY_FILE)
                                    covered=$(jq -r ".total.$k.covered" $COVERGAE_JSON_SUMMARY_FILE)
                                    pct=$(jq -r ".total.$k.pct" $COVERGAE_JSON_SUMMARY_FILE)
                                    echo -n " $pct% $covered/$total |" >> comments.txt
                                fi
                            done
                            echo "" >> comments.txt
                        else
                            echo "| *$project* | N/A | N/A | N/A | N/A |" >> comments.txt
                        fi
                    else
                        echo "| *$project* | N/A | N/A | N/A | N/A |" >> comments.txt
                    fi
                done
                #end code coverage section

                curl -fsSL https://github.com/github/hub/raw/master/script/get | bash -s 2.14.2
                GITHUB_TOKEN=$ALPS_GH_TOKEN

                #comments api call
                bin/hub api repos/alertlogic/$ALPS_REPO_NAME/issues/$ALPS_PR_NUMBER/comments --field body=@comments.txt
                
            - echo done

    -
        name: Master Push - Publish
        when:
            - push: ['master']
        image: node:13
        compute_size: large
        commands:
            - echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list
            - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
            - apt-get update && apt-get -y install google-chrome-stable
            - export CHROME_BIN='/usr/bin/google-chrome'
            - |
                set -ex

                printenv

                if [ -z "$NPM_TOKEN" ]
                then
                    echo "\$NPM_TOKEN is empty"
                    exit 1
                fi

                # needed for lerna, it wont publish if the files are changed
                git update-index --assume-unchanged .npmrc
                echo //registry.npmjs.org/:_authToken="$NPM_TOKEN" >> .npmrc
                npm whoami


                # Release section
                curl -fsSL https://github.com/github/hub/raw/master/script/get | bash -s 2.14.2
                GITHUB_TOKEN=$ALPS_GH_TOKEN


                npm install
                node_modules/lerna/cli.js info

                npm run build

                git diff
                node_modules/lerna/cli.js publish from-package --no-git-reset --no-git-tag-version --yes

            - echo done
